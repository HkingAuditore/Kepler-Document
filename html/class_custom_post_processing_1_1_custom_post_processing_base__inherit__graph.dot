digraph "CustomPostProcessing.CustomPostProcessingBase"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{CustomPostProcessing.Custom\lPostProcessingBase\n|+ Camera mainCamera\l|# Material GenerateMaterial\l(Shader shader, ref Material\l targetMaterial)\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="自定义后处理"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{MonoBehaviour\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{CustomCamera.CameraLayer\lMixer\n|+ CameraMixer cameraMixer\l+ bool enableLayer0\l+ bool enableLayer1\l+ LayerCamera layerCamera\l+ Shader mixShader\l+ Material MixMaterial\l|+ RenderTexture GetRenderResult()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_custom_camera_1_1_camera_layer_mixer.html",tooltip="相机图像混合"];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{CustomPostProcessing.Camera\lMixer\n|+ Material mixMaterial\l+ RenderTexture renderResultRT\l+ Color edgeColor\l+ Shader mixShader\l+ OutlineCatcher renderTex\lOuter\l+ RenderTexture renderTexture\l+ Material MixMaterial\l|+ RenderTexture GetRenderResult()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_custom_post_processing_1_1_camera_mixer.html",tooltip="相机输出混合"];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{CustomPostProcessing.Outline\lCatcher\n|+ Color backgroundColor\l+ Color edgeColor\l+ float edgeOnly\l+ float edgeSize\l+ Camera outlineCamera\l+ Shader outlineShader\l+ Material outlineMaterial\l|+ RenderTexture GetRenderResult()\l+ void AddTarget(GameObject\l target)\l+ void RemoveTarget(GameObject\l target)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_custom_post_processing_1_1_outline_catcher.html",tooltip="描边抓取"];
}
