digraph "Quiz.QuizSolver"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Quiz.QuizSolver\n|+ UnityEvent answerEvent\l+ float radiusOffset\l+ UnityEvent resultEvent\l+ float waitTime\l+ bool isRight\l+ float tmpAnswer\l+ Reason reason\l+ bool isAnswered\l|+ string GetQuizSentence()\l# override void Start()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="解题管理"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{QuizBase\n|+ float answer\l+ QuizType quizType\l+ QuizAstralBody target\l|# override void Start()\l# override void GenerateAstral\lBodiesWithPrefab()\l# override void GenerateAstral\lBodiesWithoutPrefab(AstralBodyData\lDictProcessHandler dataDictProcessHandler\l=null, AstralBodyDataDictProcessHandler\l afterDictProcessHandler=null)\l# override void LoadScene\l(string fileName)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_quiz_1_1_quiz_base.html",tooltip="问题管理"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{SceneLoadBase\< QuizAstral\lBody \>\n|+ T astralBodyPrefab\l+ T core\l+ bool isLoadByPrefab\l+ UnityEvent loadDoneEvent\l+ string loadTarget\l+ GravityTracing orbitBase\l+ Transform OrbitRoot\l+ bool isLoadDone\l# List\< AstralBodyDict\l\< T \> \> astralBodiesDict\l# List\< AstralBodyDataDict\l\< T \> \> _astralBodyStructDictList\l|# delegate void AstralBody\lDataDictProcessHandler\l(T prefab, AstralBodyDataDict\l\< T \> astralBodyDataDict, List\l\< AstralBodyDict\< T \>\> astralBodyDictList)\l# virtual void Start()\l# virtual void LoadScene\l(string fileName)\l# virtual void GenerateAstral\lBodiesWithPrefab()\l# virtual void GenerateAstral\lBodiesWithoutPrefab(AstralBodyData\lDictProcessHandler dataDictProcessHandler\l=null, AstralBodyDataDictProcessHandler\l afterDictProcessHandler=null)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_xml_saver_1_1_scene_load_base.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="orange",fontsize="10",style="solid",label=" \< QuizAstralBody \>" ,fontname="Helvetica"];
  Node4 [label="{XmlSaver.SceneLoadBase\< T \>\n|+ T astralBodyPrefab\l+ T core\l+ bool isLoadByPrefab\l+ UnityEvent loadDoneEvent\l+ string loadTarget\l+ Transform OrbitRoot\l+ bool isLoadDone\l# List\< AstralBodyDict\l\< T \> \> astralBodiesDict\l# List\< AstralBodyDataDict\l\< T \> \> _astralBodyStructDictList\l|# delegate void AstralBody\lDataDictProcessHandler\l(T prefab, AstralBodyDataDict\l\< T \> astralBodyDataDict, List\l\< AstralBodyDict\< T \>\> astralBodyDictList)\l# virtual void Start()\l# virtual void LoadScene\l(string fileName)\l# virtual void GenerateAstral\lBodiesWithPrefab()\l# virtual void GenerateAstral\lBodiesWithoutPrefab(AstralBodyData\lDictProcessHandler dataDictProcessHandler\l=null, AstralBodyDataDictProcessHandler\l afterDictProcessHandler=null)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_xml_saver_1_1_scene_load_base.html",tooltip="存档加载管理"];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{MonoBehaviour\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node4 [color="grey25",fontsize="10",style="solid",label=" +orbitBase" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{SpacePhysic.GravityTracing\n|+ int sample\l+ float timeScale\l+ SplineComputer splineComputer\l+ bool isFreezing\l+ bool isShowOrbit\l|+ void Awake()\l+ void Dispatch()\l+ void AddTracingTarget\l(ITraceable traceable)\l+ void Freeze(bool isFreezing)\l+ void RemoveAstralBody\l(AstralBody astralBody)\l+ ConicSection GetConicSection\l(ITraceable astralBody)\l+ void DrawMathOrbit\l(ConicSection conicSection,\l int sam)\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_space_physic_1_1_gravity_tracing.html",tooltip="引力追踪"];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +quizUI" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{CustomUI.Quiz.QuizUI\n|+ Button confirm\l+ Slider quizSlider\l+ QuizType quizType\l|+ void Generate()\l+ void OnValueChange()\l+ void Confirm()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_custom_u_i_1_1_quiz_1_1_quiz_u_i.html",tooltip=" "];
  Node5 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +quizSolver" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +ansText\n+quizCondition\n+title" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{Text\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node7 [color="grey25",fontsize="10",style="solid",label=" +target" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{SpacePhysic.AstralBody\n|+ List\< AstralBody \>\l affectedPlanets\l+ float affectRadius\l+ Vector3 angularVelocity\l+ List\< AstralBody \>\l banAffectedPlanets\l+ SphereCollider defaultCollider\l+ bool enableAffect\l+ bool enableTracing\l+ Vector3 oriVelocity\l+ SphereCollider triggerCollider\l+ UnityEvent\< Vector3\l \> velocityChangedEvent\l+ float? Mass\l+ Rigidbody astralBodyRigidbody\l+ Vector3 Force\l+ float gravity\l+ int meshNum\l+ float size\l+ double realMass\l+ double density\l+ Vector3 lastVelocity\l+ bool isLoadDone\l|+ virtual void OnCollision\lEnter(Collision other)\l+ Transform GetTransform()\l+ Vector3 GetPosition()\l+ GameObject GetGameObject()\l+ bool GetEnableTracing()\l+ virtual float GetMass()\l+ Rigidbody GetRigidbody()\l+ Vector3 GetVelocity()\l+ List\< AstralBody \>\l GetAffectedPlanets()\l+ AstralBody GetAstralBody()\l+ void ChangeVelocity\l(Vector3 velocity)\l+ void ChangeVelocity\l(double realSpeed)\l+ Vector3 CalculateForce()\l+ void SetCircleVelocity()\l+ void SetCircleVelocityMenu()\l# virtual void Start()\l# void Generate()\l# virtual void FixedUpdate()\l# virtual void SetMass()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_space_physic_1_1_astral_body.html",tooltip="星体物理实体"];
  Node5 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{ITraceable\n||+ Transform GetTransform()\l+ Vector3 GetPosition()\l+ GameObject GetGameObject()\l+ bool GetEnableTracing()\l+ float GetMass()\l+ Rigidbody GetRigidbody()\l+ Vector3 GetVelocity()\l+ List\< AstralBody \>\l GetAffectedPlanets()\l+ AstralBody GetAstralBody()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interface_space_physic_1_1_i_traceable.html",tooltip="可追踪接口"];
}
